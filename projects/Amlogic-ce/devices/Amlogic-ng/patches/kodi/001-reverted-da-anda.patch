From ad8a5193df14840fa4b1cc104f823f7efcad1b13 Mon Sep 17 00:00:00 2001
From: da-anda <da-anda@xbmc.org>
Date: Mon, 25 Jan 2021 20:27:15 +0100
Subject: [PATCH] [VideoPlayer] allow chapter seeking in overlay menus of bd-j
 blu-rays

reverted above

--- b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStream.h
+++ a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStream.h
@@ -114,7 +114,6 @@
     virtual double GetTimeStampCorrection() { return 0.0; };
     virtual bool GetState(std::string &xmlstate) = 0;
     virtual bool SetState(const std::string &xmlstate) = 0;
-    virtual bool CanSeek() { return !IsInMenu(); };
   };
 
   class IDemux
reverted:
--- b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
+++ a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.cpp
@@ -486,14 +486,11 @@
     CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - BD_EVENT_TITLE %d", m_event.param);
     const BLURAY_DISC_INFO* disc_info = bd_get_disc_info(m_bd);
 
-    m_menu = false;
-    m_isInMainMenu = false;
-
     if (m_event.param == BLURAY_TITLE_TOP_MENU)
     {
       m_title = disc_info->top_menu;
       m_menu = true;
+      break;
-      m_isInMainMenu = true;
     }
     else if (m_event.param == BLURAY_TITLE_FIRST_PLAY)
       m_title = disc_info->first_play;
@@ -501,6 +498,7 @@
       m_title = disc_info->titles[m_event.param];
     else
       m_title = nullptr;
+    m_menu = false;
 
     break;
   }
@@ -550,8 +548,6 @@
     CLog::Log(LOGDEBUG, "CDVDInputStreamBluray - BD_EVENT_MENU %d",
         m_event.param);
     m_menu = (m_event.param != 0);
-    if (!m_menu)
-      m_isInMainMenu = false;
     break;
 
   case BD_EVENT_IDLE:
@@ -692,7 +688,6 @@
   group->bForced = true;
   m_player->OnDiscNavResult(static_cast<void*>(group), BD_EVENT_MENU_OVERLAY);
   group->Release();
-  m_hasOverlay = false;
 #endif
 }
 
@@ -764,7 +759,6 @@
 
   m_player->OnDiscNavResult(static_cast<void*>(group), BD_EVENT_MENU_OVERLAY);
   group->Release();
-  m_hasOverlay = true;
 #endif
 }
 
@@ -1117,15 +1111,14 @@
     return;
   }
 
-  // we can not use this event to track a possible popup menu state since bd-j blu-rays can
-  // toggle the popup menu on their own without firing this event, and if they do this, our
-  // internal tracking state would be wrong. So just process and return.
   if(bd_user_input(m_bd, -1, BD_VK_POPUP) >= 0)
+  {
+    m_menu = !m_menu;
     return;
+  }
-
   CLog::Log(LOGDEBUG, "CDVDInputStreamBluray::OnMenu - popup failed, trying root");
 
+  if(bd_user_input(m_bd, -1, BD_VK_ROOT_MENU) >= 0)
-  if (bd_user_input(m_bd, -1, BD_VK_ROOT_MENU) >= 0)
     return;
 
   CLog::Log(LOGDEBUG, "CDVDInputStreamBluray::OnMenu - root failed, trying explicit");
@@ -1137,11 +1130,7 @@
 {
   if(m_bd == nullptr || !m_navmode)
     return false;
+  if(m_menu /*|| !m_planes[BD_OVERLAY_IG].o.empty()*/)
-
-  // since there is no way to tell in a BD-J blu-ray when a popup menu actually is visible,
-  // we have to assume that the blu-ray is in menu/navigation mode when there is an overlay
-  // on screen, even if it might be invisible (which is impossible to detect)
-  if(m_menu || m_hasOverlay)
     return true;
   return false;
 }
@@ -1162,11 +1151,6 @@
   }
 }
 
-bool CDVDInputStreamBluray::CanSeek()
-{
-  return !IsInMenu() || !m_isInMainMenu;
-}
-
 bool CDVDInputStreamBluray::HasMenu()
 {
   return m_navmode;
reverted:
--- b/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
+++ a/xbmc/cores/VideoPlayer/DVDInputStreams/DVDInputStreamBluray.h
@@ -91,7 +91,6 @@
   void SkipStill() override;
   bool GetState(std::string &xmlstate) override { return false; }
   bool SetState(const std::string &xmlstate) override { return false; }
-  bool CanSeek() override;
 
 
   void UserInput(bd_vk_key_e vk);
@@ -139,8 +138,6 @@
   BLURAY_CLIP_INFO* m_clip = nullptr;
   uint32_t m_angle = 0;
   bool m_menu = false;
-  bool m_isInMainMenu = false;
-  bool m_hasOverlay = false;
   bool m_navmode = false;
   int m_dispTimeBeforeRead = 0;
 
reverted:
--- b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
+++ a/xbmc/cores/VideoPlayer/VideoPlayer.cpp
@@ -4196,21 +4196,13 @@
       case ACTION_NEXT_ITEM:
         THREAD_ACTION(action);
         CLog::Log(LOGDEBUG, " - pushed next in menu, stream will decide");
+        pMenus->OnNext();
-        if (pMenus->CanSeek() && GetChapterCount() > 0 && GetChapter() < GetChapterCount())
-          m_messenger.Put(new CDVDMsgPlayerSeekChapter(GetChapter() + 1));
-        else
-          pMenus->OnNext();
-
         CServiceBroker::GetGUI()->GetInfoManager().GetInfoProviders().GetPlayerInfoProvider().SetDisplayAfterSeek();
         return true;
       case ACTION_PREV_ITEM:
         THREAD_ACTION(action);
         CLog::Log(LOGDEBUG, " - pushed prev in menu, stream will decide");
+        pMenus->OnPrevious();
-        if (pMenus->CanSeek() && GetChapterCount() > 0 && GetChapter() > 0)
-          m_messenger.Put(new CDVDMsgPlayerSeekChapter(GetChapter() - 1));
-        else
-          pMenus->OnPrevious();
-
         CServiceBroker::GetGUI()->GetInfoManager().GetInfoProviders().GetPlayerInfoProvider().SetDisplayAfterSeek();
         return true;
       case ACTION_PREVIOUS_MENU:
@@ -4560,11 +4552,9 @@
   state.startTime = 0;
   state.timeMin = 0;
 
-  std::shared_ptr<CDVDInputStream::IMenus> pMenu = std::dynamic_pointer_cast<CDVDInputStream::IMenus>(m_pInputStream);
-
   if (m_pDemuxer)
   {
+    if (IsInMenuInternal())
-    if (IsInMenuInternal() && pMenu && !pMenu->CanSeek())
       state.chapter = 0;
     else
       state.chapter = m_pDemuxer->GetChapter();
@@ -4596,7 +4586,7 @@
     CDVDInputStream::IChapter* pChapter = m_pInputStream->GetIChapter();
     if (pChapter)
     {
+      if (IsInMenuInternal())
-      if (IsInMenuInternal() && pMenu && !pMenu->CanSeek())
         state.chapter = 0;
       else
         state.chapter = pChapter->GetChapter();
@@ -4646,9 +4636,9 @@
       state.time_offset = 0;
     }
 
+    if (std::shared_ptr<CDVDInputStream::IMenus> ptr = std::dynamic_pointer_cast<CDVDInputStream::IMenus>(m_pInputStream))
-    if (pMenu)
     {
+      if (!ptr->GetState(state.player_state))
-      if (!pMenu->GetState(state.player_state))
         state.player_state = "";
 
       if (m_dvd.state == DVDSTATE_STILL)
@@ -4660,9 +4650,8 @@
       else if (IsInMenuInternal())
       {
         state.time = pDisplayTime->GetTime();
+        state.time_offset = 0;
         state.isInMenu = true;
-        if (!pMenu->CanSeek())
-          state.time_offset = 0;
       }
       state.hasMenu = true;
     }
